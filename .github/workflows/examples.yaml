name: Size Comparison
on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    branches: ["main"]

jobs:
  windows:
    name: windows-size-comparison
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      
      # Create and build base project
      - name: Create base project
        run: |
          mkdir size_comparison
          cd size_comparison
          flutter create base_project
          cd base_project
          flutter build windows
          $baseSize = (Get-ChildItem -Recurse "build\windows\x64\runner\Release\" | Measure-Object -Property Length -Sum).Sum
          echo "BASE_SIZE=$baseSize" | Out-File -FilePath $env:GITHUB_ENV -Append
      
      # Build and measure opencv_core
      - name: opencv_core size
        run: |
          cd packages/opencv_core/example
          flutter build windows
          $coreSize = (Get-ChildItem -Recurse "build\windows\x64\runner\Release\" | Measure-Object -Property Length -Sum).Sum
          echo "CORE_SIZE=$coreSize" | Out-File -FilePath $env:GITHUB_ENV -Append
      
      # Build and measure opencv_dart
      - name: opencv_dart size
        run: |
          cd packages/opencv_dart/example
          flutter build windows
          $dartSize = (Get-ChildItem -Recurse "build\windows\x64\runner\Release\" | Measure-Object -Property Length -Sum).Sum
          echo "DART_SIZE=$dartSize" | Out-File -FilePath $env:GITHUB_ENV -Append
      
      # Generate size comparison JSON
      - name: Generate size report
        run: |
          $report = @{
            'platform' = 'windows'
            'base_size' = $env:BASE_SIZE
            'opencv_core' = @{
              'total_size' = $env:CORE_SIZE
              'package_size' = [int]$env:CORE_SIZE - [int]$env:BASE_SIZE
            }
            'opencv_dart' = @{
              'total_size' = $env:DART_SIZE
              'package_size' = [int]$env:DART_SIZE - [int]$env:BASE_SIZE
            }
          }
          $report | ConvertTo-Json | Out-File windows_size_report.json

      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: windows-size-report
          path: windows_size_report.json

  android:
    name: android-size-comparison
    runs-on: ubuntu-latest
    steps:
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      # Create and build base project
      - name: Create base project
        run: |
          mkdir size_comparison
          cd size_comparison
          flutter create base_project
          cd base_project
          flutter build apk --release --target-platform android-arm64,android-arm,android-x64 --split-per-abi
          BASE_SIZE_ARM64=$(stat -c%s "build/app/outputs/flutter-apk/app-arm64-v8a-release.apk" || echo "0")
          BASE_SIZE_ARMV7=$(stat -c%s "build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk" || echo "0")
          BASE_SIZE_X64=$(stat -c%s "build/app/outputs/flutter-apk/app-x86_64-release.apk" || echo "0")
          echo "BASE_SIZE_ARM64=$BASE_SIZE_ARM64" >> $GITHUB_ENV
          echo "BASE_SIZE_ARMV7=$BASE_SIZE_ARMV7" >> $GITHUB_ENV
          echo "BASE_SIZE_X64=$BASE_SIZE_X64" >> $GITHUB_ENV
      
      # Build and measure opencv_core
      - name: opencv_core size
        run: |
          cd packages/opencv_core/example
          flutter build apk --release --target-platform android-arm64,android-arm,android-x64 --split-per-abi
          CORE_SIZE_ARM64=$(stat -c%s "build/app/outputs/flutter-apk/app-arm64-v8a-release.apk" || echo "0")
          CORE_SIZE_ARMV7=$(stat -c%s "build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk" || echo "0")
          CORE_SIZE_X64=$(stat -c%s "build/app/outputs/flutter-apk/app-x86_64-release.apk" || echo "0")
          echo "CORE_SIZE_ARM64=$CORE_SIZE_ARM64" >> $GITHUB_ENV
          echo "CORE_SIZE_ARMV7=$CORE_SIZE_ARMV7" >> $GITHUB_ENV
          echo "CORE_SIZE_X64=$CORE_SIZE_X64" >> $GITHUB_ENV
      
      # Build and measure opencv_dart
      - name: opencv_dart size
        run: |
          cd packages/opencv_dart/example
          flutter build apk --release --target-platform android-arm64,android-arm,android-x64 --split-per-abi
          DART_SIZE_ARM64=$(stat -c%s "build/app/outputs/flutter-apk/app-arm64-v8a-release.apk" || echo "0")
          DART_SIZE_ARMV7=$(stat -c%s "build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk" || echo "0")
          DART_SIZE_X64=$(stat -c%s "build/app/outputs/flutter-apk/app-x86_64-release.apk" || echo "0")
          echo "DART_SIZE_ARM64=$DART_SIZE_ARM64" >> $GITHUB_ENV
          echo "DART_SIZE_ARMV7=$DART_SIZE_ARMV7" >> $GITHUB_ENV
          echo "DART_SIZE_X64=$DART_SIZE_X64" >> $GITHUB_ENV

      # Generate size comparison JSON
      - name: Generate size report
        run: |
          cat > android_size_report.json << EOL
          {
            "platform": "android",
            "base_size": {
              "arm64-v8a": ${BASE_SIZE_ARM64:-0},
              "armeabi-v7a": ${BASE_SIZE_ARMV7:-0},
              "x86_64": ${BASE_SIZE_X64:-0}
            },
            "opencv_core": {
              "arm64-v8a": ${CORE_SIZE_ARM64:-0},
              "armeabi-v7a": ${CORE_SIZE_ARMV7:-0},
              "x86_64": ${CORE_SIZE_X64:-0}
            },
            "opencv_dart": {
              "arm64-v8a": ${DART_SIZE_ARM64:-0},
              "armeabi-v7a": ${DART_SIZE_ARMV7:-0},
              "x86_64": ${DART_SIZE_X64:-0}
            }
          }
          EOL

      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: android-size-report
          path: android_size_report.json
  linux:
    name: linux-size-comparison
    runs-on: ubuntu-latest
    steps:
      - name: Setup dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y curl git unzip xz-utils zip libglu1-mesa
          sudo apt-get install clang cmake git \
            ninja-build pkg-config \
            libgtk-3-dev liblzma-dev \
            libstdc++-12-dev
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: actions/checkout@v4
      
      # Create and build base project
      - name: Create base project
        run: |
          mkdir size_comparison
          cd size_comparison
          flutter create base_project
          cd base_project
          flutter build linux
          BASE_SIZE=$(du -sb "build/linux/x64/release/bundle" | cut -f1)
          echo "BASE_SIZE=$BASE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_core
      - name: opencv_core size
        run: |
          cd packages/opencv_core/example
          flutter build linux
          CORE_SIZE=$(du -sb "build/linux/x64/release/bundle" | cut -f1)
          echo "CORE_SIZE=$CORE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_dart
      - name: opencv_dart size
        run: |
          cd packages/opencv_dart/example
          flutter build linux
          DART_SIZE=$(du -sb "build/linux/x64/release/bundle" | cut -f1)
          echo "DART_SIZE=$DART_SIZE" >> $GITHUB_ENV
      
      # Generate size comparison JSON
      - name: Generate size report
        run: |
          base_size=${BASE_SIZE:-0}
          core_size=${CORE_SIZE:-0}
          dart_size=${DART_SIZE:-0}
          
          core_diff=$((core_size - base_size))
          dart_diff=$((dart_size - base_size))
          
          cat > linux_size_report.json << EOL
          {
            "platform": "linux",
            "base_size": $base_size,
            "opencv_core": {
              "total_size": $core_size,
              "package_size": $core_diff
            },
            "opencv_dart": {
              "total_size": $dart_size,
              "package_size": $dart_diff
            }
          }
          EOL

      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: linux-size-report
          path: linux_size_report.json

  ios:
    name: ios-size-comparison
    runs-on: macos-14
    steps:
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: actions/checkout@v4
      
      # Create and build base project
      - name: Create base project
        run: |
          mkdir size_comparison
          cd size_comparison
          flutter create base_project
          cd base_project
          flutter build ios --release --no-codesign
          BASE_SIZE=$(du -sk "build/ios/iphoneos/Runner.app" | cut -f1)
          echo "BASE_SIZE=$BASE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_core
      - name: opencv_core size
        run: |
          cd packages/opencv_core/example
          flutter build ios --release --no-codesign
          CORE_SIZE=$(du -sk "build/ios/iphoneos/Runner.app" | cut -f1)
          echo "CORE_SIZE=$CORE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_dart
      - name: opencv_dart size
        run: |
          cd packages/opencv_dart/example
          flutter build ios --release --no-codesign
          DART_SIZE=$(du -sk "build/ios/iphoneos/Runner.app" | cut -f1)
          echo "DART_SIZE=$DART_SIZE" >> $GITHUB_ENV
      
      # Generate size comparison JSON
      - name: Generate size report
        run: |
          base_size=${BASE_SIZE:-0}
          core_size=${CORE_SIZE:-0}
          dart_size=${DART_SIZE:-0}
          
          core_diff=$((core_size - base_size))
          dart_diff=$((dart_size - base_size))
          
          cat > ios_size_report.json << EOL
          {
            "platform": "ios",
            "base_size": $base_size,
            "opencv_core": {
              "total_size": $core_size,
              "package_size": $core_diff
            },
            "opencv_dart": {
              "total_size": $dart_size,
              "package_size": $dart_diff
            }
          }
          EOL

      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: ios-size-report
          path: ios_size_report.json

  macos:
    name: macos-size-comparison
    runs-on: macos-13
    steps:
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: actions/checkout@v4
      
      # Create and build base project
      - name: Create base project
        run: |
          mkdir size_comparison
          cd size_comparison
          flutter create base_project
          cd base_project
          flutter build macos
          BASE_SIZE=$(du -sk "build/macos/Build/Products/Release/base_project.app" | cut -f1)
          echo "BASE_SIZE=$BASE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_core
      - name: opencv_core size
        run: |
          cd packages/opencv_core/example
          flutter build macos
          CORE_SIZE=$(du -sk "build/macos/Build/Products/Release/opencv_core_example.app" | cut -f1)
          echo "CORE_SIZE=$CORE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_dart
      - name: opencv_dart size
        run: |
          cd packages/opencv_dart/example
          flutter build macos
          DART_SIZE=$(du -sk "build/macos/Build/Products/Release/opencv_dart_example.app" | cut -f1)
          echo "DART_SIZE=$DART_SIZE" >> $GITHUB_ENV
      
      # Generate size comparison JSON
      - name: Generate size report
        run: |
          base_size=${BASE_SIZE:-0}
          core_size=${CORE_SIZE:-0}
          dart_size=${DART_SIZE:-0}
          
          core_diff=$((core_size - base_size))
          dart_diff=$((dart_size - base_size))
          
          cat > macos_size_report.json << EOL
          {
            "platform": "macos",
            "base_size": $base_size,
            "opencv_core": {
              "total_size": $core_size,
              "package_size": $core_diff
            },
            "opencv_dart": {
              "total_size": $dart_size,
              "package_size": $dart_diff
            }
          }
          EOL

      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: macos-size-report
          path: macos_size_report.json

  macos-arm:
    name: macos-arm-size-comparison
    runs-on: macos-14
    steps:
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - uses: actions/checkout@v4
      
      # Create and build base project
      - name: Create base project
        run: |
          mkdir size_comparison
          cd size_comparison
          flutter create base_project
          cd base_project
          flutter build macos
          BASE_SIZE=$(du -sk "build/macos/Build/Products/Release/base_project.app" | cut -f1)
          echo "BASE_SIZE=$BASE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_core
      - name: opencv_core size
        run: |
          cd packages/opencv_core/example
          flutter build macos
          CORE_SIZE=$(du -sk "build/macos/Build/Products/Release/opencv_core_example.app" | cut -f1)
          echo "CORE_SIZE=$CORE_SIZE" >> $GITHUB_ENV
      
      # Build and measure opencv_dart
      - name: opencv_dart size
        run: |
          cd packages/opencv_dart/example
          flutter build macos
          DART_SIZE=$(du -sk "build/macos/Build/Products/Release/opencv_dart_example.app" | cut -f1)
          echo "DART_SIZE=$DART_SIZE" >> $GITHUB_ENV
      
      # Generate size comparison JSON
      - name: Generate size report
        run: |
          base_size=${BASE_SIZE:-0}
          core_size=${CORE_SIZE:-0}
          dart_size=${DART_SIZE:-0}
          
          core_diff=$((core_size - base_size))
          dart_diff=$((dart_size - base_size))
          
          cat > macos_arm_size_report.json << EOL
          {
            "platform": "macos-arm",
            "base_size": $base_size,
            "opencv_core": {
              "total_size": $core_size,
              "package_size": $core_diff
            },
            "opencv_dart": {
              "total_size": $dart_size,
              "package_size": $dart_diff
            }
          }
          EOL

      - name: Upload size report
        uses: actions/upload-artifact@v4
        with:
          name: macos-arm-size-report
          path: macos_arm_size_report.json

  combine-reports:
    needs: [windows, android, ios, linux, macos, macos-arm]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: size-reports
      
      - name: Combine reports
        run: |
          echo "{" > combined_size_report.json
          echo "  \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\"," >> combined_size_report.json
          echo "  \"platforms\": {" >> combined_size_report.json
          
          first=true
          for report in size-reports/*/*.json; do
            if [ "$first" = true ]; then
              first=false
            else
              echo "," >> combined_size_report.json
            fi
            platform=$(basename "$report" _size_report.json)
            content=$(cat "$report" | sed '1s/^/    "'"$platform"'": /')
            echo "$content" >> combined_size_report.json
          done
          
          echo "  }" >> combined_size_report.json
          echo "}" >> combined_size_report.json

      - name: Upload combined report
        uses: actions/upload-artifact@v4
        with:
          name: combined-size-report
          path: combined_size_report.json