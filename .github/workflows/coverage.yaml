name: coverage

on:
  push:
    branches: ["main"]
  pull_request:
    branches: [ "main" ]

jobs:
  windows:
    name: windows
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
      - uses: robinraju/release-downloader@v1.10
        with:
          repository: "rainyl/opencv_dart"
          tag: "dnn_test_files"
          fileName: "models.zip"
          out-file-path: "packages/dartcv/test/"
          extract: true
      - uses: robinraju/release-downloader@v1.10
        with:
          repository: "rainyl/dartcv"
          latest: true
          fileName: "libdartcv-windows-x64-vs2019.tar.gz"
          out-file-path: "packages/dartcv/libdartcv"
          extract: true
      - uses: subosito/flutter-action@v2
        with:
          channel: "stable"
      - name: Prepare Vulkan SDK
        uses: humbletim/setup-vulkan-sdk@v1.2.0
        with:
          vulkan-query-version: 1.3.204.0
          vulkan-components: Vulkan-Headers, Vulkan-Loader
          vulkan-use-cache: true
      - name: test coverage
        run: |
          cd "${{github.workspace}}\packages\dartcv"
          $env:PATH="${{github.workspace}}\packages\dartcv\libdartcv\lib;$env:PATH"
          dart pub global activate coverage
          dart pub global run coverage:test_with_coverage --package . --package-name dartcv4
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          flags: unittests
          directory: ${{github.workspace}}/packages/dartcv/coverage
          file: ${{github.workspace}}/packages/dartcv/coverage/lcov.info
          verbose: true
