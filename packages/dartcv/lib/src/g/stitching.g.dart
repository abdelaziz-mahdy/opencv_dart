// coverage:ignore-file
// opencv_dart - OpenCV bindings for Dart language
//    some c wrappers were from gocv: https://github.com/hybridgroup/gocv
//    License: Apache-2.0 https://github.com/hybridgroup/gocv/blob/release/LICENSE.txt
// Author: Rainyl
// License: Apache-2.0
// Date: 2024/01/28

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;
import 'package:dartcv/src/g/types.g.dart' as imp1;

/// Native bindings for OpenCV - Stitching
///
class CvNativeStitching {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  CvNativeStitching(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  CvNativeStitching.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void Stitcher_Close(
    StitcherPtr stitcher,
  ) {
    return _Stitcher_Close(
      stitcher,
    );
  }

  late final _Stitcher_ClosePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(StitcherPtr)>>(
          'Stitcher_Close');
  late final _Stitcher_Close =
      _Stitcher_ClosePtr.asFunction<void Function(StitcherPtr)>();

  void Stitcher_Close_Async(
    StitcherPtr stitcher,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_Close_Async(
      stitcher,
      callback,
    );
  }

  late final _Stitcher_Close_AsyncPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(StitcherPtr, imp1.CvCallback_0)>>(
      'Stitcher_Close_Async');
  late final _Stitcher_Close_Async = _Stitcher_Close_AsyncPtr.asFunction<
      void Function(StitcherPtr, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_Component(
    Stitcher self,
    ffi.Pointer<VecI32> rval,
  ) {
    return _Stitcher_Component(
      self,
      rval,
    );
  }

  late final _Stitcher_ComponentPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Pointer<VecI32>)>>('Stitcher_Component');
  late final _Stitcher_Component = _Stitcher_ComponentPtr.asFunction<
      ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<VecI32>)>();

  ffi.Pointer<CvStatus> Stitcher_Component_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_Component_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_Component_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, imp1.CvCallback_1)>>('Stitcher_Component_Async');
  late final _Stitcher_Component_Async =
      _Stitcher_Component_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_ComposePanorama(
    Stitcher self,
    Mat rpano,
    ffi.Pointer<ffi.Int> rval,
  ) {
    return _Stitcher_ComposePanorama(
      self,
      rpano,
      rval,
    );
  }

  late final _Stitcher_ComposePanoramaPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, Mat,
              ffi.Pointer<ffi.Int>)>>('Stitcher_ComposePanorama');
  late final _Stitcher_ComposePanorama =
      _Stitcher_ComposePanoramaPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, Mat, ffi.Pointer<ffi.Int>)>();

  ffi.Pointer<CvStatus> Stitcher_ComposePanorama_1(
    Stitcher self,
    VecMat mats,
    Mat rpano,
    ffi.Pointer<ffi.Int> rval,
  ) {
    return _Stitcher_ComposePanorama_1(
      self,
      mats,
      rpano,
      rval,
    );
  }

  late final _Stitcher_ComposePanorama_1Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, VecMat, Mat,
              ffi.Pointer<ffi.Int>)>>('Stitcher_ComposePanorama_1');
  late final _Stitcher_ComposePanorama_1 =
      _Stitcher_ComposePanorama_1Ptr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, VecMat, Mat, ffi.Pointer<ffi.Int>)>();

  ffi.Pointer<CvStatus> Stitcher_ComposePanorama_1_Async(
    Stitcher self,
    VecMat mats,
    imp1.CvCallback_2 callback,
  ) {
    return _Stitcher_ComposePanorama_1_Async(
      self,
      mats,
      callback,
    );
  }

  late final _Stitcher_ComposePanorama_1_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, VecMat,
              imp1.CvCallback_2)>>('Stitcher_ComposePanorama_1_Async');
  late final _Stitcher_ComposePanorama_1_Async =
      _Stitcher_ComposePanorama_1_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, VecMat, imp1.CvCallback_2)>();

  ffi.Pointer<CvStatus> Stitcher_ComposePanorama_Async(
    Stitcher self,
    imp1.CvCallback_2 callback,
  ) {
    return _Stitcher_ComposePanorama_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_ComposePanorama_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, imp1.CvCallback_2)>>('Stitcher_ComposePanorama_Async');
  late final _Stitcher_ComposePanorama_Async =
      _Stitcher_ComposePanorama_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_2)>();

  ffi.Pointer<CvStatus> Stitcher_Create(
    int mode,
    ffi.Pointer<Stitcher> rval,
  ) {
    return _Stitcher_Create(
      mode,
      rval,
    );
  }

  late final _Stitcher_CreatePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              ffi.Int, ffi.Pointer<Stitcher>)>>('Stitcher_Create');
  late final _Stitcher_Create = _Stitcher_CreatePtr.asFunction<
      ffi.Pointer<CvStatus> Function(int, ffi.Pointer<Stitcher>)>();

  ffi.Pointer<CvStatus> Stitcher_Create_Async(
    int mode,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_Create_Async(
      mode,
      callback,
    );
  }

  late final _Stitcher_Create_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              ffi.Int, imp1.CvCallback_1)>>('Stitcher_Create_Async');
  late final _Stitcher_Create_Async = _Stitcher_Create_AsyncPtr.asFunction<
      ffi.Pointer<CvStatus> Function(int, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_EstimateTransform(
    Stitcher self,
    VecMat mats,
    VecMat masks,
    ffi.Pointer<ffi.Int> rval,
  ) {
    return _Stitcher_EstimateTransform(
      self,
      mats,
      masks,
      rval,
    );
  }

  late final _Stitcher_EstimateTransformPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, VecMat, VecMat,
              ffi.Pointer<ffi.Int>)>>('Stitcher_EstimateTransform');
  late final _Stitcher_EstimateTransform =
      _Stitcher_EstimateTransformPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, VecMat, VecMat, ffi.Pointer<ffi.Int>)>();

  ffi.Pointer<CvStatus> Stitcher_EstimateTransform_Async(
    Stitcher self,
    VecMat mats,
    VecMat masks,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_EstimateTransform_Async(
      self,
      mats,
      masks,
      callback,
    );
  }

  late final _Stitcher_EstimateTransform_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, VecMat, VecMat,
              imp1.CvCallback_1)>>('Stitcher_EstimateTransform_Async');
  late final _Stitcher_EstimateTransform_Async =
      _Stitcher_EstimateTransform_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, VecMat, VecMat, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_Get(
    Stitcher self,
    ffi.Pointer<Stitcher> rval,
  ) {
    return _Stitcher_Get(
      self,
      rval,
    );
  }

  late final _Stitcher_GetPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Pointer<Stitcher>)>>('Stitcher_Get');
  late final _Stitcher_Get = _Stitcher_GetPtr.asFunction<
      ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<Stitcher>)>();

  ffi.Pointer<CvStatus> Stitcher_GetCompositingResol(
    Stitcher self,
    ffi.Pointer<ffi.Double> rval,
  ) {
    return _Stitcher_GetCompositingResol(
      self,
      rval,
    );
  }

  late final _Stitcher_GetCompositingResolPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              ffi.Pointer<ffi.Double>)>>('Stitcher_GetCompositingResol');
  late final _Stitcher_GetCompositingResol =
      _Stitcher_GetCompositingResolPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<ffi.Double>)>();

  ffi.Pointer<CvStatus> Stitcher_GetCompositingResol_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_GetCompositingResol_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_GetCompositingResol_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              imp1.CvCallback_1)>>('Stitcher_GetCompositingResol_Async');
  late final _Stitcher_GetCompositingResol_Async =
      _Stitcher_GetCompositingResol_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_GetInterpolationFlags(
    Stitcher self,
    ffi.Pointer<ffi.Int> rval,
  ) {
    return _Stitcher_GetInterpolationFlags(
      self,
      rval,
    );
  }

  late final _Stitcher_GetInterpolationFlagsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              ffi.Pointer<ffi.Int>)>>('Stitcher_GetInterpolationFlags');
  late final _Stitcher_GetInterpolationFlags =
      _Stitcher_GetInterpolationFlagsPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<ffi.Int>)>();

  ffi.Pointer<CvStatus> Stitcher_GetInterpolationFlags_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_GetInterpolationFlags_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_GetInterpolationFlags_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              imp1.CvCallback_1)>>('Stitcher_GetInterpolationFlags_Async');
  late final _Stitcher_GetInterpolationFlags_Async =
      _Stitcher_GetInterpolationFlags_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_GetPanoConfidenceThresh(
    Stitcher self,
    ffi.Pointer<ffi.Double> rval,
  ) {
    return _Stitcher_GetPanoConfidenceThresh(
      self,
      rval,
    );
  }

  late final _Stitcher_GetPanoConfidenceThreshPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              ffi.Pointer<ffi.Double>)>>('Stitcher_GetPanoConfidenceThresh');
  late final _Stitcher_GetPanoConfidenceThresh =
      _Stitcher_GetPanoConfidenceThreshPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<ffi.Double>)>();

  ffi.Pointer<CvStatus> Stitcher_GetPanoConfidenceThresh_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_GetPanoConfidenceThresh_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_GetPanoConfidenceThresh_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              imp1.CvCallback_1)>>('Stitcher_GetPanoConfidenceThresh_Async');
  late final _Stitcher_GetPanoConfidenceThresh_Async =
      _Stitcher_GetPanoConfidenceThresh_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_GetRegistrationResol(
    Stitcher self,
    ffi.Pointer<ffi.Double> rval,
  ) {
    return _Stitcher_GetRegistrationResol(
      self,
      rval,
    );
  }

  late final _Stitcher_GetRegistrationResolPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              ffi.Pointer<ffi.Double>)>>('Stitcher_GetRegistrationResol');
  late final _Stitcher_GetRegistrationResol =
      _Stitcher_GetRegistrationResolPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<ffi.Double>)>();

  ffi.Pointer<CvStatus> Stitcher_GetRegistrationResol_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_GetRegistrationResol_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_GetRegistrationResol_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              imp1.CvCallback_1)>>('Stitcher_GetRegistrationResol_Async');
  late final _Stitcher_GetRegistrationResol_Async =
      _Stitcher_GetRegistrationResol_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_GetSeamEstimationResol(
    Stitcher self,
    ffi.Pointer<ffi.Double> rval,
  ) {
    return _Stitcher_GetSeamEstimationResol(
      self,
      rval,
    );
  }

  late final _Stitcher_GetSeamEstimationResolPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              ffi.Pointer<ffi.Double>)>>('Stitcher_GetSeamEstimationResol');
  late final _Stitcher_GetSeamEstimationResol =
      _Stitcher_GetSeamEstimationResolPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<ffi.Double>)>();

  ffi.Pointer<CvStatus> Stitcher_GetSeamEstimationResol_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_GetSeamEstimationResol_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_GetSeamEstimationResol_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              imp1.CvCallback_1)>>('Stitcher_GetSeamEstimationResol_Async');
  late final _Stitcher_GetSeamEstimationResol_Async =
      _Stitcher_GetSeamEstimationResol_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_GetWaveCorrectKind(
    Stitcher self,
    ffi.Pointer<ffi.Int> rval,
  ) {
    return _Stitcher_GetWaveCorrectKind(
      self,
      rval,
    );
  }

  late final _Stitcher_GetWaveCorrectKindPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Pointer<ffi.Int>)>>('Stitcher_GetWaveCorrectKind');
  late final _Stitcher_GetWaveCorrectKind =
      _Stitcher_GetWaveCorrectKindPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<ffi.Int>)>();

  ffi.Pointer<CvStatus> Stitcher_GetWaveCorrectKind_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_GetWaveCorrectKind_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_GetWaveCorrectKind_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              imp1.CvCallback_1)>>('Stitcher_GetWaveCorrectKind_Async');
  late final _Stitcher_GetWaveCorrectKind_Async =
      _Stitcher_GetWaveCorrectKind_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_GetWaveCorrection(
    Stitcher self,
    ffi.Pointer<ffi.Bool> rval,
  ) {
    return _Stitcher_GetWaveCorrection(
      self,
      rval,
    );
  }

  late final _Stitcher_GetWaveCorrectionPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Pointer<ffi.Bool>)>>('Stitcher_GetWaveCorrection');
  late final _Stitcher_GetWaveCorrection =
      _Stitcher_GetWaveCorrectionPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Pointer<ffi.Bool>)>();

  ffi.Pointer<CvStatus> Stitcher_GetWaveCorrection_Async(
    Stitcher self,
    imp1.CvCallback_1 callback,
  ) {
    return _Stitcher_GetWaveCorrection_Async(
      self,
      callback,
    );
  }

  late final _Stitcher_GetWaveCorrection_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher,
              imp1.CvCallback_1)>>('Stitcher_GetWaveCorrection_Async');
  late final _Stitcher_GetWaveCorrection_Async =
      _Stitcher_GetWaveCorrection_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, imp1.CvCallback_1)>();

  ffi.Pointer<CvStatus> Stitcher_SetCompositingResol(
    Stitcher self,
    double inval,
  ) {
    return _Stitcher_SetCompositingResol(
      self,
      inval,
    );
  }

  late final _Stitcher_SetCompositingResolPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Double)>>('Stitcher_SetCompositingResol');
  late final _Stitcher_SetCompositingResol = _Stitcher_SetCompositingResolPtr
      .asFunction<ffi.Pointer<CvStatus> Function(Stitcher, double)>();

  ffi.Pointer<CvStatus> Stitcher_SetCompositingResol_Async(
    Stitcher self,
    double inval,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_SetCompositingResol_Async(
      self,
      inval,
      callback,
    );
  }

  late final _Stitcher_SetCompositingResol_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Double,
              imp1.CvCallback_0)>>('Stitcher_SetCompositingResol_Async');
  late final _Stitcher_SetCompositingResol_Async =
      _Stitcher_SetCompositingResol_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, double, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_SetInterpolationFlags(
    Stitcher self,
    int inval,
  ) {
    return _Stitcher_SetInterpolationFlags(
      self,
      inval,
    );
  }

  late final _Stitcher_SetInterpolationFlagsPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<CvStatus> Function(Stitcher, ffi.Int)>>(
      'Stitcher_SetInterpolationFlags');
  late final _Stitcher_SetInterpolationFlags =
      _Stitcher_SetInterpolationFlagsPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, int)>();

  ffi.Pointer<CvStatus> Stitcher_SetInterpolationFlags_Async(
    Stitcher self,
    int inval,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_SetInterpolationFlags_Async(
      self,
      inval,
      callback,
    );
  }

  late final _Stitcher_SetInterpolationFlags_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Int,
              imp1.CvCallback_0)>>('Stitcher_SetInterpolationFlags_Async');
  late final _Stitcher_SetInterpolationFlags_Async =
      _Stitcher_SetInterpolationFlags_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, int, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_SetPanoConfidenceThresh(
    Stitcher self,
    double inval,
  ) {
    return _Stitcher_SetPanoConfidenceThresh(
      self,
      inval,
    );
  }

  late final _Stitcher_SetPanoConfidenceThreshPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Double)>>('Stitcher_SetPanoConfidenceThresh');
  late final _Stitcher_SetPanoConfidenceThresh =
      _Stitcher_SetPanoConfidenceThreshPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, double)>();

  ffi.Pointer<CvStatus> Stitcher_SetPanoConfidenceThresh_Async(
    Stitcher self,
    double inval,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_SetPanoConfidenceThresh_Async(
      self,
      inval,
      callback,
    );
  }

  late final _Stitcher_SetPanoConfidenceThresh_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Double,
              imp1.CvCallback_0)>>('Stitcher_SetPanoConfidenceThresh_Async');
  late final _Stitcher_SetPanoConfidenceThresh_Async =
      _Stitcher_SetPanoConfidenceThresh_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, double, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_SetRegistrationResol(
    Stitcher self,
    double inval,
  ) {
    return _Stitcher_SetRegistrationResol(
      self,
      inval,
    );
  }

  late final _Stitcher_SetRegistrationResolPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Double)>>('Stitcher_SetRegistrationResol');
  late final _Stitcher_SetRegistrationResol = _Stitcher_SetRegistrationResolPtr
      .asFunction<ffi.Pointer<CvStatus> Function(Stitcher, double)>();

  ffi.Pointer<CvStatus> Stitcher_SetRegistrationResol_Async(
    Stitcher self,
    double inval,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_SetRegistrationResol_Async(
      self,
      inval,
      callback,
    );
  }

  late final _Stitcher_SetRegistrationResol_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Double,
              imp1.CvCallback_0)>>('Stitcher_SetRegistrationResol_Async');
  late final _Stitcher_SetRegistrationResol_Async =
      _Stitcher_SetRegistrationResol_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, double, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_SetSeamEstimationResol(
    Stitcher self,
    double inval,
  ) {
    return _Stitcher_SetSeamEstimationResol(
      self,
      inval,
    );
  }

  late final _Stitcher_SetSeamEstimationResolPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, ffi.Double)>>('Stitcher_SetSeamEstimationResol');
  late final _Stitcher_SetSeamEstimationResol =
      _Stitcher_SetSeamEstimationResolPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, double)>();

  ffi.Pointer<CvStatus> Stitcher_SetSeamEstimationResol_Async(
    Stitcher self,
    double inval,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_SetSeamEstimationResol_Async(
      self,
      inval,
      callback,
    );
  }

  late final _Stitcher_SetSeamEstimationResol_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Double,
              imp1.CvCallback_0)>>('Stitcher_SetSeamEstimationResol_Async');
  late final _Stitcher_SetSeamEstimationResol_Async =
      _Stitcher_SetSeamEstimationResol_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, double, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_SetWaveCorrectKind(
    Stitcher self,
    int inval,
  ) {
    return _Stitcher_SetWaveCorrectKind(
      self,
      inval,
    );
  }

  late final _Stitcher_SetWaveCorrectKindPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<CvStatus> Function(Stitcher, ffi.Int)>>(
      'Stitcher_SetWaveCorrectKind');
  late final _Stitcher_SetWaveCorrectKind = _Stitcher_SetWaveCorrectKindPtr
      .asFunction<ffi.Pointer<CvStatus> Function(Stitcher, int)>();

  ffi.Pointer<CvStatus> Stitcher_SetWaveCorrectKind_Async(
    Stitcher self,
    int inval,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_SetWaveCorrectKind_Async(
      self,
      inval,
      callback,
    );
  }

  late final _Stitcher_SetWaveCorrectKind_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Int,
              imp1.CvCallback_0)>>('Stitcher_SetWaveCorrectKind_Async');
  late final _Stitcher_SetWaveCorrectKind_Async =
      _Stitcher_SetWaveCorrectKind_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, int, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_SetWaveCorrection(
    Stitcher self,
    bool inval,
  ) {
    return _Stitcher_SetWaveCorrection(
      self,
      inval,
    );
  }

  late final _Stitcher_SetWaveCorrectionPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<CvStatus> Function(Stitcher, ffi.Bool)>>(
      'Stitcher_SetWaveCorrection');
  late final _Stitcher_SetWaveCorrection = _Stitcher_SetWaveCorrectionPtr
      .asFunction<ffi.Pointer<CvStatus> Function(Stitcher, bool)>();

  ffi.Pointer<CvStatus> Stitcher_SetWaveCorrection_Async(
    Stitcher self,
    bool inval,
    imp1.CvCallback_0 callback,
  ) {
    return _Stitcher_SetWaveCorrection_Async(
      self,
      inval,
      callback,
    );
  }

  late final _Stitcher_SetWaveCorrection_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, ffi.Bool,
              imp1.CvCallback_0)>>('Stitcher_SetWaveCorrection_Async');
  late final _Stitcher_SetWaveCorrection_Async =
      _Stitcher_SetWaveCorrection_AsyncPtr.asFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, bool, imp1.CvCallback_0)>();

  ffi.Pointer<CvStatus> Stitcher_Stitch(
    Stitcher self,
    VecMat mats,
    Mat rpano,
    ffi.Pointer<ffi.Int> rval,
  ) {
    return _Stitcher_Stitch(
      self,
      mats,
      rpano,
      rval,
    );
  }

  late final _Stitcher_StitchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, VecMat, Mat, ffi.Pointer<ffi.Int>)>>('Stitcher_Stitch');
  late final _Stitcher_Stitch = _Stitcher_StitchPtr.asFunction<
      ffi.Pointer<CvStatus> Function(
          Stitcher, VecMat, Mat, ffi.Pointer<ffi.Int>)>();

  ffi.Pointer<CvStatus> Stitcher_Stitch_1(
    Stitcher self,
    VecMat mats,
    VecMat masks,
    Mat rpano,
    ffi.Pointer<ffi.Int> rval,
  ) {
    return _Stitcher_Stitch_1(
      self,
      mats,
      masks,
      rpano,
      rval,
    );
  }

  late final _Stitcher_Stitch_1Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, VecMat, VecMat, Mat,
              ffi.Pointer<ffi.Int>)>>('Stitcher_Stitch_1');
  late final _Stitcher_Stitch_1 = _Stitcher_Stitch_1Ptr.asFunction<
      ffi.Pointer<CvStatus> Function(
          Stitcher, VecMat, VecMat, Mat, ffi.Pointer<ffi.Int>)>();

  ffi.Pointer<CvStatus> Stitcher_Stitch_1_Async(
    Stitcher self,
    VecMat mats,
    VecMat masks,
    imp1.CvCallback_2 callback,
  ) {
    return _Stitcher_Stitch_1_Async(
      self,
      mats,
      masks,
      callback,
    );
  }

  late final _Stitcher_Stitch_1_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(Stitcher, VecMat, VecMat,
              imp1.CvCallback_2)>>('Stitcher_Stitch_1_Async');
  late final _Stitcher_Stitch_1_Async = _Stitcher_Stitch_1_AsyncPtr.asFunction<
      ffi.Pointer<CvStatus> Function(
          Stitcher, VecMat, VecMat, imp1.CvCallback_2)>();

  ffi.Pointer<CvStatus> Stitcher_Stitch_Async(
    Stitcher self,
    VecMat mats,
    imp1.CvCallback_2 callback,
  ) {
    return _Stitcher_Stitch_Async(
      self,
      mats,
      callback,
    );
  }

  late final _Stitcher_Stitch_AsyncPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<CvStatus> Function(
              Stitcher, VecMat, imp1.CvCallback_2)>>('Stitcher_Stitch_Async');
  late final _Stitcher_Stitch_Async = _Stitcher_Stitch_AsyncPtr.asFunction<
      ffi.Pointer<CvStatus> Function(Stitcher, VecMat, imp1.CvCallback_2)>();

  late final addresses = _SymbolAddresses(this);
}

class _SymbolAddresses {
  final CvNativeStitching _library;
  _SymbolAddresses(this._library);
  ffi.Pointer<ffi.NativeFunction<ffi.Void Function(StitcherPtr)>>
      get Stitcher_Close => _library._Stitcher_ClosePtr;
  ffi.Pointer<
          ffi.NativeFunction<ffi.Void Function(StitcherPtr, imp1.CvCallback_0)>>
      get Stitcher_Close_Async => _library._Stitcher_Close_AsyncPtr;
}

typedef CvStatus = imp1.CvStatus;
typedef Mat = imp1.Mat;

const int STITCHING_ERR_CAMERA_PARAMS_ADJUST_FAIL = 3;

const int STITCHING_ERR_HOMOGRAPHY_EST_FAIL = 2;

const int STITCHING_ERR_NEED_MORE_IMGS = 1;

const int STITCHING_OK = 0;

const int STITCHING_PANORAMA = 0;

const int STITCHING_SCANS = 1;

final class Stitcher extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Void>> ptr;
}

typedef StitcherPtr = ffi.Pointer<Stitcher>;
typedef VecI32 = imp1.VecI32;
typedef VecMat = imp1.VecMat;
